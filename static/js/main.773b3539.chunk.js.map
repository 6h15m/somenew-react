{"version":3,"sources":["components/Categories.js","components/NewsItem.js","components/NewsList.js","lib/usePromise.js","pages/NewsPage.js","App.js","index.js"],"names":["categories","name","text","CategoriesBlock","styled","div","Category","NavLink","Categories","onSelect","category","map","c","activeClassName","exact","to","NewsItemBlock","NewsItem","article","title","description","url","urlToImage","className","href","target","rel","src","alt","NewsListBlock","NewsList","promiseCreator","deps","useState","loading","setLoading","resolved","setResolved","error","setError","useEffect","a","process","usePromise","query","axios","get","response","articles","data","NewsPage","match","params","App","path","component","ReactDOM","render","document","getElementById"],"mappings":"2MAIMA,EAAa,CACf,CACIC,KAAM,MACNC,KAAM,4BAEV,CACID,KAAM,WACNC,KAAM,4BAEV,CACID,KAAM,gBACNC,KAAM,wCAEV,CACID,KAAM,SACNC,KAAM,gBAEV,CACID,KAAM,UACNC,KAAM,gBAEV,CACID,KAAM,SACNC,KAAM,sBAEV,CACID,KAAM,aACNC,KAAM,iBAIRC,EAAkBC,IAAOC,IAAV,gNAWfC,EAAWF,YAAOG,IAAPH,CAAH,wcA2CCI,EAjBI,SAAC,GAA2B,EAAzBC,SAAyB,EAAfC,SAC5B,OACI,cAACP,EAAD,UACKH,EAAWW,KAAI,SAAAC,GAAC,OACb,cAACN,EAAD,CAEIO,gBAAgB,SAChBC,MAAkB,QAAXF,EAAEX,KACTc,GAAe,QAAXH,EAAEX,KAAiB,kBAAnB,WAA2CW,EAAEX,MAJrD,SAMKW,EAAEV,MALEU,EAAEX,Y,QC1ErBe,EAAgBZ,IAAOC,IAAV,+jBAsDJY,EAvBE,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACRC,EAAwCD,EAAxCC,MAAOC,EAAiCF,EAAjCE,YAAaC,EAAoBH,EAApBG,IAAKC,EAAeJ,EAAfI,WACjC,OACI,eAACN,EAAD,WACKM,GACG,qBAAKC,UAAU,YAAf,SACI,mBAAGC,KAAMH,EAAKI,OAAO,SAASC,IAAI,sBAAlC,SACI,qBAAKC,IAAKL,EAAYM,IAAI,kBAItC,sBAAKL,UAAU,WAAf,UACI,6BACI,mBAAGC,KAAMH,EAAKI,OAAO,SAASC,IAAI,sBAAlC,SACKP,MAGT,4BAAIC,W,0CC7CpB,IAAMS,EAAgBzB,IAAOC,IAAV,uRA6CJyB,EAhCE,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAChB,EClBW,SAAoBqB,EAAgBC,GAEjD,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAgCF,mBAAS,MAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA0BJ,mBAAS,MAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAiBA,OAfAC,qBAAU,YACK,uCAAG,4BAAAC,EAAA,6DACdN,GAAW,GADG,kBAGWJ,IAHX,OAGNK,EAHM,OAIZC,EAAYD,GAJA,gDAMZG,EAAS,EAAD,IANI,QAQdJ,GAAW,GARG,yDAAH,oDAUbO,KAECV,GAEI,CAACE,EAASE,EAAUE,GDHUK,EAAW,WAC1C,IAAMC,EAAqB,QAAblC,EAAqB,GAArB,oBAAuCA,GACrD,OAAOmC,IAAMC,IAAN,yDAC+CF,EAD/C,+CAGR,CAAClC,IALJ,mBAAOwB,EAAP,KAAgBa,EAAhB,KAA0BT,EAA1B,KAQA,GAAIJ,EACA,OAAO,cAACL,EAAD,qCAGX,IAAKkB,EACD,OAAO,KAGX,GAAIT,EACA,OAAO,cAACT,EAAD,yCAIX,IAAQmB,EAAaD,EAASE,KAAtBD,SACR,OACI,cAACnB,EAAD,UACKmB,EAASrC,KAAI,SAAAO,GAAO,OACjB,cAAC,EAAD,CAA4BA,QAASA,GAAtBA,EAAQG,WE7BxB6B,EAZE,SAAC,GAAe,IAEvBxC,EAFsB,EAAZyC,MAEOC,OAAO1C,UAAY,MAE1C,OACI,qCACI,cAAC,EAAD,IACA,cAAC,EAAD,CAAUA,SAAUA,QCHjB2C,EAJH,WACV,OAAO,cAAC,IAAD,CAAOC,KAAK,cAAcC,UAAWL,KCC9CM,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.773b3539.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst categories = [\r\n    {\r\n        name: 'all',\r\n        text: '전체보기'\r\n    },\r\n    {\r\n        name: 'business',\r\n        text: '비즈니스'\r\n    },\r\n    {\r\n        name: 'entertainment',\r\n        text: '엔터테인먼트'\r\n    },\r\n    {\r\n        name: 'health',\r\n        text: '건강'\r\n    },\r\n    {\r\n        name: 'science',\r\n        text: '과학'\r\n    },\r\n    {\r\n        name: 'sports',\r\n        text: '스포츠'\r\n    },\r\n    {\r\n        name: 'technology',\r\n        text: '기술'\r\n    },\r\n];\r\n\r\nconst CategoriesBlock = styled.div`\r\n    display: flex;\r\n    padding: 1rem;\r\n    width: 768px;\r\n    margin: 0 auto;\r\n    @media screen and (max-width: 768px) {\r\n        width: 100%;\r\n        overflow-x: auto;\r\n    }\r\n`;\r\n\r\nconst Category = styled(NavLink)`\r\n    font-size: 1.125rem;\r\n    cursor: pointer;\r\n    white-space: pre;\r\n    text-decoration: none;\r\n    color: inherit;\r\n    padding-bottom: 0.25rem;\r\n\r\n    &:hover {\r\n        color: #495057;\r\n    }\r\n\r\n    &.active {\r\n        font-weight: 600;\r\n        border-bottom: 2px solid #22b8cf;\r\n        color: #22b8cf;\r\n        &:hover {\r\n            color: #3bc9db;\r\n        }\r\n    }\r\n\r\n    & + & {\r\n        margin-left: 1rem;\r\n    }\r\n`;\r\n\r\nconst Categories = ({ onSelect, category }) => {\r\n    return (\r\n        <CategoriesBlock>\r\n            {categories.map(c => (\r\n                <Category\r\n                    key={c.name}\r\n                    activeClassName=\"active\"\r\n                    exact={c.name === 'all'}\r\n                    to={c.name === 'all' ? '/somenew-react/' : `/${c.name}`}\r\n                >\r\n                    {c.text}\r\n                </Category>\r\n            ))}\r\n        </CategoriesBlock>\r\n    );\r\n};\r\n\r\nexport default Categories;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst NewsItemBlock = styled.div`\r\n    display: flex;\r\n\r\n    .thumbnail {\r\n        margin-right: 1rem;\r\n        img {\r\n            display: block;\r\n            width: 160px;\r\n            height: 100px;\r\n            object-fit: cover;\r\n        }\r\n    }\r\n    .contents {\r\n        h2 {\r\n            margin: 0;\r\n            a {\r\n                color: black;\r\n            }\r\n        }\r\n        p {\r\n            margin: 0;\r\n            line-height: 1.5;\r\n            margin-top: 0.5rem;\r\n            white-space: normal;\r\n        }\r\n    }\r\n    & + & {\r\n        margin-top: 3rem;\r\n    }\r\n`;\r\n\r\nconst NewsItem = ({ article }) => {\r\n    const { title, description, url, urlToImage } = article;\r\n    return (\r\n        <NewsItemBlock>\r\n            {urlToImage && (\r\n                <div className=\"thumbnail\">\r\n                    <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <img src={urlToImage} alt=\"thumbnail\" />\r\n                    </a>\r\n                </div>\r\n            )}\r\n            <div className=\"contents\">\r\n                <h2>\r\n                    <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        {title}\r\n                    </a>\r\n                </h2>\r\n                <p>{description}</p>\r\n            </div>\r\n        </NewsItemBlock>\r\n    );\r\n};\r\n\r\nexport default NewsItem;","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport NewsItem from './NewsItem';\r\nimport axios from 'axios';\r\nimport usePromise from '../lib/usePromise';\r\n\r\nconst NewsListBlock = styled.div`\r\n    box-sizing: border-box;\r\n    padding-bottom: 3rem;\r\n    width: 768px;\r\n    margin: 0 auto;\r\n    margin-top: 2rem;\r\n    @media screen and (max-width: 768px) {\r\n        width: 100%;\r\n        padding-left: 1rem;\r\n        padding-right: 1rem;\r\n    }\r\n`;\r\n\r\nconst NewsList = ({ category }) => {\r\n    const [loading, response, error] = usePromise(() => {\r\n        const query = category === 'all' ? '' : `&category=${category}`;\r\n        return axios.get(\r\n            `https://newsapi.org/v2/top-headlines?country=kr${query}&apiKey=42cabebc7fc94b9e9523f7f6d226468f`,\r\n        );\r\n    }, [category]);\r\n\r\n    // 대기 중일 때\r\n    if (loading) {\r\n        return <NewsListBlock>대기 중...</NewsListBlock>\r\n    }\r\n    // 아직 response 값이 설정되지 않았을 때\r\n    if (!response) {\r\n        return null;\r\n    }\r\n    // 에러가 발생했을 때\r\n    if (error) {\r\n        return <NewsListBlock>에러 발생!</NewsListBlock>;\r\n    }\r\n\r\n    //response 값이 유효할 때\r\n    const { articles } = response.data;\r\n    return (\r\n        <NewsListBlock>\r\n            {articles.map(article => (\r\n                <NewsItem key={article.url} article={article} />\r\n            ))}\r\n        </NewsListBlock>\r\n    );\r\n};\r\n\r\nexport default NewsList;","import { useState, useEffect } from \"react\";\r\n\r\nexport default function usePromise(promiseCreator, deps) {\r\n  // 대기 중/완료/실패에 대한 상태 관리\r\n  const [loading, setLoading] = useState(false);\r\n  const [resolved, setResolved] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const process = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const resolved = await promiseCreator();\r\n        setResolved(resolved);\r\n      } catch (e) {\r\n        setError(e);\r\n      }\r\n      setLoading(false);\r\n    };\r\n    process();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, deps);\r\n\r\n  return [loading, resolved, error];\r\n}","import React from \"react\";\r\nimport Categories from \"../components/Categories\";\r\nimport NewsList from \"../components/NewsList\";\r\n\r\nconst NewsPage = ({ match }) => {\r\n    // 카테고리가 선택되지 않았으면 기본값 all로 사용\r\n    const category = match.params.category || 'all';\r\n\r\n    return (\r\n        <>\r\n            <Categories />\r\n            <NewsList category={category} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NewsPage;","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport NewsPage from \"./pages/NewsPage\";\n\nconst App = () => {\n  return <Route path=\"/:category?\" component={NewsPage} />;\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);"],"sourceRoot":""}